# Note: this started as a default GitHub "Python" .gitignore file.

# Gitignore File Formatting Notes: 
# - add a / *after* a name to indicate a folder, and leave it off to indicate a file; ex: `folder/`, `file`
# - Add a / *before* a name to indicate it is an absolute-style path starting at this repository's "root" directory, or in other words, the directory where the git repo's ".git" folder is located; ex: `/folder/`, `/file`
#   - See: https://stackoverflow.com/questions/43555850/git-gitignore-to-ignore-only-folder-in-root-directory/43555863#43555863
# - Use asterisks (*) for wildcards; ex: `/mydir/*/*.cpp`
# - Add an exclamanation mark (!) *before* a path to indicate you do NOT want it ignored, even if it otherwise matches a path to ignore; ex: 
#   ```
#   /ignored_dir/                           # ignore this dir
#   !/ignored_dir/special_file_to_include   # EXCEPT for this file--DO include it!
#   ``` 

/git_branch_hash_backups/
/private/

temp/

# Temporary LibreOffice Writer & Calc files
*.odt#
*.ods#

# Sublime Text workspace files
# - you don't need to back these up, as they are auto-generated from a project file and specific to a local machine
# - back up only the *.sublime-project files instead!
*.sublime-workspace

# -------------------------------------------------------------

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
